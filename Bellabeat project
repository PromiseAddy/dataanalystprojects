 #Checked for number of participants by counting number of distinct Ids in each dataset.
SELECT COUNT (DISTINCT Id) AS Total_Ids 
FROM `universal-torch-386515.Fitbit_data.daily_activities`

#I repeated the SQL query above with each dataset (changing the FROM clause each time) and recieved these results:
• Daily_Activity_Merged- 33
• Daily_Calories_Merged- 33
• Daily_Steps_Merged- 33
• Daily_Intensity_Merged- 33
• Sleep_Day_Merged- 24

##First, I wanted to see how many times each of the users wore/used the FitBit tracker:
SELECT
COUNT(Id) AS Total_Id
FROM `universal-torch-386515.Fitbit_data.daily_activities`
GROUP BY Id

64% of users logged data for the entire data time period (04-12-2016 to 05-12-2016). When you add in the users who only missed 1-3 days that percentage jumps up to 82% of users who logged data or wore their FitBit Tracker consistently over the month long period.

#Next, I wanted to breakdown the users by how much they wore their FitBit Fitness Tracker. I created three user types:
• Active User - wore their tracker for 25-31 days
• Moderate User - wore their tracker for 15-24 days
• Light User - wore their tracker for 0 to 14 days

SELECT Id,
COUNT(Id) AS Total_Logged_Uses,
CASE
WHEN COUNT(Id) BETWEEN 25 AND 31 THEN 'Active User'
WHEN COUNT(Id) BETWEEN 15 and 24 THEN 'Moderate User'
WHEN COUNT(Id) BETWEEN 0 and 14 THEN 'Light User'
END Fitbit_Usage_Type
FROM `universal-torch-386515.Fitbit_data.daily_activities`
GROUP BY Id

#In this daily_activity_new dataset, I wanted to analyze some parameters. The first one was the average active minutes by day of week.
SELECT 
  day_of_week, 
  ROUND(AVG(VeryActiveMinutes),2) as avg_very_act_min,
  ROUND(AVG(FairlyActiveMinutes),2) as avg_fairly_act_min,
  ROUND(AVG(LightlyActiveMinutes),2) as avg_lightly_act_min,
  ROUND(AVG(SedentaryMinutes),2) as sedentary_min, 
FROM
  (
  SELECT *,
  CASE
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 1) THEN 'Mon'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 2) THEN 'Tue'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 3) THEN 'Wed'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 4) THEN 'Thu'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 5) THEN 'Fri'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 6) THEN 'Sat'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 7) THEN 'Sun'
  END AS day_of_week
  FROM `universal-torch-386515.Fitbit_data.daily_activities`
  )
GROUP BY day_of_week

#Key Takeaway:
• Total average active minutes shows slightly difference throughout the week
• Sedentary Minutes are the highest type of active minutes

#According to 10,000steps.org, 10,000 steps is the recommended daily step target for healthy adults to achieve health benefits.

The following pedometer indices have been developed to provide a guideline on steps and activity levels:
• Sedentary is less than 5,000 steps per day 
• Low active is 5,000 to 7,499 steps per day
• Somewhat active is 7,500 to 9,999 steps per day
• Active is more than 10,000 steps per day
• Highly active is more than 12,500 

SELECT Id, AVG(TotalSteps) AS avg_step,
  CASE
  WHEN AVG(TotalSteps) < 5000 THEN 'Sedentary Lifestyle'
  WHEN AVG(TotalSteps) BETWEEN 5000 and 7499 THEN 'Low Active'
  WHEN AVG(TotalSteps) BETWEEN 7500 and 9999 THEN 'Somewhat Active'
  WHEN AVG(TotalSteps) BETWEEN 10000 and 12499 THEN 'Active'
  WHEN AVG(TotalSteps) >= 12500 THEN 'highly Active'
  END AS user_step_class
FROM `universal-torch-386515.Fitbit_data.daily_activities`
Group by Id
ORDER BY avg_step

#More than 50% of the users are considered low active and somewhat active

#Next, I wanted to know the average of steps, distances, and calories spent per week.
SELECT 
  day_of_week, 
  ROUND(AVG(TotalSteps),2) AS avg_step,
  ROUND(AVG(TotalDistance),2) AS avg_dist, 
  ROUND(AVG(Calories),2) AS calories, 
FROM
  (
  SELECT *,
  CASE
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 1) THEN 'Mon'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 2) THEN 'Tue'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 3) THEN 'Wed'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 4) THEN 'Thu'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 5) THEN 'Fri'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 6) THEN 'Sat'
  WHEN (EXTRACT(DAYOFWEEK FROM ActivityDate)= 7) THEN 'Sun'
  END AS day_of_week
  FROM `universal-torch-386515.Fitbit_data.daily_activities`
  )
GROUP BY day_of_week
ORDER BY calories DESC

#Key Takeaway:
• The highest average step and distance per day was on Sunday and Wednesday with almost 9 thousand steps and 6 km distance.
• Average calories shows little difference throughout the week.
• 
#I wanted to look if there was a correlation between total steps and calories.
SELECT 
  Id,
  avg(Calories) as avg_calories, 
  avg(TotalSteps) as avg_total_step, 
FROM `universal-torch-386515.Fitbit_data.daily_activities`
GROUP BY Id

#Key Takeaway:
• There is high correlation between average total step and calories


